import pytest
import sys
sys.path.append('../')
from sudokusolver import SudokuSolver

def test_solve_first():
    board = [[8, 0, 0, 2, 0, 6, 0, 7, 3],
             [0, 0, 6, 0, 4, 0, 0, 0, 0],
             [0, 0, 5, 0, 0, 0, 9, 0, 0],
             [0, 1, 0, 4, 0, 0, 0, 6, 0],
             [0, 0, 7, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 8, 0, 1, 0, 7],
             [4, 7, 9, 0, 3, 0, 0, 0, 5],
             [0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 8, 7, 0, 0, 2, 1, 0]]

    solution = [[8, 9, 1, 2, 5, 6, 4, 7, 3],
                [7, 2, 6, 3, 4, 9, 8, 5, 1],
                [3, 4, 5, 8, 7, 1, 9, 2, 6],
                [9, 1, 3, 4, 2, 7, 5, 6, 8],
                [6, 8, 7, 9, 1, 5, 3, 4, 2],
                [2, 5, 4, 6, 8, 3, 1, 9, 7],
                [4, 7, 9, 1, 3, 2, 6, 8, 5],
                [1, 6, 2, 5, 9, 8, 7, 3, 4],
                [5, 3, 8, 7, 6, 4, 2, 1, 9]]
    
    game = SudokuSolver(board)
    game.solve(0,0)
    assert game.get_board() == solution

def test_solve_second():
    board = [[0, 6, 0, 0, 0, 3, 0, 0, 7],
             [3, 0, 0, 6, 8, 0, 0, 1, 0],
             [1, 9, 0, 2, 0, 0, 0, 0, 0],
             [6, 8, 5, 0, 0, 0, 1, 3, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0],
             [2, 1, 0, 0, 0, 0, 0, 0, 0],
             [4, 0, 3, 0, 0, 0, 0, 0, 6],
             [0, 0, 0, 0, 2, 0, 0, 0, 9],
             [0, 0, 0, 0, 4, 0, 8, 7, 0]]

    solution = [[5, 6, 8, 9, 1, 3, 4, 2, 7],
                [3, 4, 2, 6, 8, 7, 9, 1, 5],
                [1, 9, 7, 2, 5, 4, 6, 8, 3],
                [6, 8, 5, 4, 7, 9, 1, 3, 2],
                [7, 3, 4, 1, 6, 2, 5, 9, 8],
                [2, 1, 9, 5, 3, 8, 7, 6, 4],
                [4, 7, 3, 8, 9, 1, 2, 5, 6],
                [8, 5, 1, 7, 2, 6, 3, 4, 9],
                [9, 2, 6, 3, 4, 5, 8, 7, 1]]

    game = SudokuSolver(board)
    game.solve(0,0)
    assert game.get_board() == solution

def test_solve_third():
    board = [[0, 9, 0, 0, 0, 7, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 4, 5],
             [7, 0, 0, 0, 8, 0, 0, 0, 6],
             [0, 0, 0, 0, 0, 5, 3, 0, 0],
             [0, 8, 0, 0, 0, 0, 0, 0, 9],
             [0, 0, 4, 9, 0, 0, 0, 6, 0],
             [5, 0, 1, 6, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 4, 0, 0, 1, 0],
             [0, 0, 0, 0, 0, 0, 2, 5, 7]]

    solution = [[4, 9, 6, 1, 5, 7, 8, 3, 2],
                [2, 1, 8, 3, 9, 6, 7, 4, 5],
                [7, 5, 3, 2, 8, 4, 1, 9, 6],
                [9, 6, 2, 4, 1, 5, 3, 7, 8],
                [1, 8, 5, 7, 6, 3, 4, 2, 9],
                [3, 7, 4, 9, 2, 8, 5, 6, 1],
                [5, 3, 1, 6, 7, 2, 9, 8, 4],
                [8, 2, 7, 5, 4, 9, 6, 1, 3],
                [6, 4, 9, 8, 3, 1, 2, 5, 7]]

    game = SudokuSolver(board)
    game.solve(0,0)
    assert game.get_board() == solution
